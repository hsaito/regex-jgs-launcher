name: CI
permissions:
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Compile TypeScript
      run: npm run compile
    
    - name: Setup display server (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb
    
    - name: Run tests (Linux)
      if: runner.os == 'Linux'
      run: xvfb-run -a --server-args="-screen 0 1024x768x24" npm test
      env:
        DISPLAY: ':99.0'
    
    - name: Run tests (Windows/macOS)
      if: runner.os != 'Linux'
      run: npm test
    
    - name: Test packaging (Ubuntu only, Node 20)
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
      run: |
        npm install -g @vscode/vsce
        vsce package --no-yarn
        ls -la *.vsix

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level moderate
      continue-on-error: true
    
    - name: Check for outdated dependencies
      run: npm outdated
      continue-on-error: true

